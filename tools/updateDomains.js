/*
 * This script downloads federal domains from USA.gov and generates
 * config/domains.js with an array of domains. Running this script
 * will overwrite that file with new domains. This should be Running
 * periodically to keep up with need domains.
 *
 */
var fs = require('fs'),
    path = require('path'),
    async = require('async'),
    _ = require('underscore'),
    request = require('request');

var endpoints = [
  // Federal non-.gov domains
  {
    url: 'http://govt-urls.usa.gov/tematres/vocab/services.php?output=json&task=fetchDown&arg=17',
    json: true,
    rejectUnauthorized: false,
  },
  // Federal .gov domains
  {
    url: 'http://govt-urls.usa.gov/tematres/vocab/services.php?output=json&task=fetchDown&arg=11928',
    json: true,
    rejectUnauthorized: false,
  },
];

var domains = [
  { result: { mil: { string: '.mil' } } },
];

async.map(endpoints, get, (err, results) => {
  if(err) {
    console.log(err);
  }
  console.log('Results length', results.length);
  domains = domains.concat(results);
  console.log('Domains list length', domains.length);
  domains = _(domains).chain().pluck('result').reduce(function (memo, values) {
    return _(memo).extend(values);
  }, {}).values().pluck('string').unique().value().sort();
  var content = '/* This file is automatically generated ' +
        'by ../tools/updateDomains.js */\n\n' +
        'module.exports.domains = ' +
        JSON.stringify(domains, null, 2).replace(/"/g, '\'') + ';\n',
      file = path.join(__dirname, '../config', 'domains.js');
  fs.writeFile(file, content, function (err) {
    if (err) console.error(err);
    else console.log('Successfully wrote to ../config/domains.js');
  });
});

function get (endpoint, callback) {
  request.get(endpoint, function (err, res, json) {
    if (err) return callback(err);
    callback(null, json);
  });
}
